-- VERSION:0.2 --SDATE:26/03/2015 --DESC:CHANGED EMP_ID AS ULD_ID IN TICKLER_HISTORY TABLE --DONE BY:RL
-- VERSION:0.1 --SDATE:21/02/2015 --DESC:CONFIG,EMAIL,UAR,TICKLER TABLE CREATION --DONE BY:RL

DROP PROCEDURE IF EXISTS SP_LMC_CONFIGURATION_EMAIL_TICKLER_TABLE_CREATION;
CREATE PROCEDURE SP_LMC_CONFIGURATION_EMAIL_TICKLER_TABLE_CREATION(
OUT SUCCESS_MESSAGE TEXT)

BEGIN

-- QUERY FOR ROLLBACK COMMAND
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		SET SUCCESS_MESSAGE=0;
	END;
	START TRANSACTION;

	SET FOREIGN_KEY_CHECKS = 0;
	SET SUCCESS_MESSAGE=0;
	SET AUTOCOMMIT=0;
		
-- CONFIGURATION_PROFILE TABLE CREATION QUERY
	DROP TABLE IF EXISTS LMC_CONFIGURATION_PROFILE;
	CREATE TABLE LMC_CONFIGURATION_PROFILE(
	CNP_ID INTEGER NOT NULL	AUTO_INCREMENT,
	CNP_DATA VARCHAR(25) UNIQUE	NOT NULL,
	PRIMARY KEY(CNP_ID));

	SET @ALTER_CONFIGURATION_PROFILE = (SELECT CONCAT('ALTER TABLE LMC_CONFIGURATION_PROFILE AUTO_INCREMENT = 0'));
	PREPARE ALTER_CONFIGURATION_PROFILE_STMT FROM @ALTER_CONFIGURATION_PROFILE;
	EXECUTE ALTER_CONFIGURATION_PROFILE_STMT;

-- CONFIGURATION TABLE CREATION
	DROP TABLE IF EXISTS LMC_CONFIGURATION;
	CREATE TABLE LMC_CONFIGURATION(
	CGN_ID INTEGER NOT NULL	AUTO_INCREMENT,
	CNP_ID INTEGER NOT NULL,
	CGN_TYPE VARCHAR(50) UNIQUE	NOT NULL,
	CGN_NON_IP_FLAG	CHAR(2) NULL,
	PRIMARY KEY(CGN_ID),
	FOREIGN KEY(CNP_ID) REFERENCES LMC_CONFIGURATION_PROFILE (CNP_ID));

	SET @ALTER_CONFIGURATION = (SELECT CONCAT('ALTER TABLE LMC_CONFIGURATION AUTO_INCREMENT = 0'));
	PREPARE ALTER_CONFIGURATION_STMT FROM @ALTER_CONFIGURATION;
	EXECUTE ALTER_CONFIGURATION_STMT;

-- ERROR_MESSAGE_CONFIGURATION TABLE CREATION
	DROP TABLE IF EXISTS LMC_ERROR_MESSAGE_CONFIGURATION;
	CREATE TABLE LMC_ERROR_MESSAGE_CONFIGURATION(
	EMC_ID INTEGER NOT NULL	AUTO_INCREMENT,
	CNP_ID INTEGER NOT NULL,
	EMC_CODE INTEGER NOT NULL,
	EMC_DATA TEXT NOT NULL,
	EMC_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER NOT NULL,
	EMC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EMC_ID),
	FOREIGN KEY(CNP_ID) REFERENCES LMC_CONFIGURATION_PROFILE (CNP_ID), 
	FOREIGN KEY(ULD_ID) REFERENCES LMC_USER_LOGIN_DETAILS (ULD_ID));

	SET @ALTER_ERROR_MESSAGE_CONFIGURATION = (SELECT CONCAT('ALTER TABLE LMC_ERROR_MESSAGE_CONFIGURATION AUTO_INCREMENT = 0'));
	PREPARE ALTER_ERROR_MESSAGE_CONFIGURATION_STMT FROM @ALTER_ERROR_MESSAGE_CONFIGURATION;
	EXECUTE ALTER_ERROR_MESSAGE_CONFIGURATION_STMT;

-- USER_RIGHTS_CONFIGURATION TABLE CREATION
	DROP TABLE IF EXISTS LMC_USER_RIGHTS_CONFIGURATION;
	CREATE TABLE LMC_USER_RIGHTS_CONFIGURATION(
	URC_ID INTEGER NOT NULL	AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	URC_DATA TEXT NOT NULL,
	URC_INITIALIZE_FLAG	CHAR(1) NULL,
	URC_USERSTAMP VARCHAR(50) NOT NULL,
	URC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(URC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES LMC_CONFIGURATION (CGN_ID));

	SET @ALTER_USER_RIGHTS_CONFIGURATION = (SELECT CONCAT('ALTER TABLE LMC_USER_RIGHTS_CONFIGURATION AUTO_INCREMENT = 0'));
	PREPARE ALTER_USER_RIGHTS_CONFIGURATION_STMT FROM @ALTER_USER_RIGHTS_CONFIGURATION;
	EXECUTE ALTER_USER_RIGHTS_CONFIGURATION_STMT;

-- LMC_EMAIL_TEMPLATE
	DROP TABLE IF EXISTS LMC_EMAIL_TEMPLATE;
	CREATE TABLE LMC_EMAIL_TEMPLATE(
	ET_ID INTEGER NOT NULL AUTO_INCREMENT,
	ET_EMAIL_SCRIPT	VARCHAR(100) UNIQUE	NOT NULL,
	PRIMARY KEY(ET_ID));

	SET @ALTER_EMAIL_TEMPLATE = (SELECT CONCAT('ALTER TABLE LMC_EMAIL_TEMPLATE AUTO_INCREMENT = 0'));
	PREPARE ALTER_EMAIL_TEMPLATE_STMT FROM @ALTER_EMAIL_TEMPLATE;
	EXECUTE ALTER_EMAIL_TEMPLATE_STMT;

-- LMC_EMAIL_TEMPLATE_DETAILS
	DROP TABLE IF EXISTS LMC_EMAIL_TEMPLATE_DETAILS;
	CREATE TABLE LMC_EMAIL_TEMPLATE_DETAILS(
	ETD_ID INTEGER NOT NULL AUTO_INCREMENT,
	ET_ID INTEGER NOT NULL,
	ETD_EMAIL_SUBJECT VARCHAR(1000) NOT NULL,
	ETD_EMAIL_BODY TEXT NOT NULL,
	ULD_ID INTEGER NOT NULL,
	ETD_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(ETD_ID),
	FOREIGN KEY(ET_ID) REFERENCES LMC_EMAIL_TEMPLATE (ET_ID),
	FOREIGN KEY(ULD_ID) REFERENCES LMC_USER_LOGIN_DETAILS (ULD_ID));

	SET @ALTER_EMAIL_TEMPLATE_DETAILS = (SELECT CONCAT('ALTER TABLE LMC_EMAIL_TEMPLATE_DETAILS AUTO_INCREMENT = 0'));
	PREPARE ALTER_EMAIL_TEMPLATE_DETAILS_STMT FROM @ALTER_EMAIL_TEMPLATE_DETAILS;
	EXECUTE ALTER_EMAIL_TEMPLATE_DETAILS_STMT;

-- LMC_TICKLER_PROFILE
	DROP TABLE IF EXISTS LMC_TICKLER_PROFILE;
	CREATE TABLE LMC_TICKLER_PROFILE(
	TP_ID INTEGER NOT NULL AUTO_INCREMENT,
	TP_TYPE	CHAR(10) NOT NULL,
	PRIMARY KEY(TP_ID));

	SET @ALTER_TICKLER_PROFILE = (SELECT CONCAT('ALTER TABLE LMC_TICKLER_PROFILE AUTO_INCREMENT = 0'));
	PREPARE ALTER_TICKLER_PROFILE_STMT FROM @ALTER_TICKLER_PROFILE;
	EXECUTE ALTER_TICKLER_PROFILE_STMT;

-- LMC_TICKLER_TABID_PROFILE
	DROP TABLE IF EXISTS LMC_TICKLER_TABID_PROFILE;
	CREATE TABLE LMC_TICKLER_TABID_PROFILE(
	TTIP_ID INTEGER NOT NULL AUTO_INCREMENT,
	TTIP_DATA VARCHAR(50) NOT NULL,
	PRIMARY KEY(TTIP_ID));

	SET @ALTER_TICKLER_TABID_PROFILE = (SELECT CONCAT('ALTER TABLE LMC_TICKLER_TABID_PROFILE AUTO_INCREMENT = 0'));
	PREPARE ALTER_TICKLER_TABID_PROFILE_STMT FROM @ALTER_TICKLER_TABID_PROFILE;
	EXECUTE ALTER_TICKLER_TABID_PROFILE_STMT;

-- LMC_TICKLER_HISTORY
	DROP TABLE IF EXISTS LMC_TICKLER_HISTORY;
	CREATE TABLE LMC_TICKLER_HISTORY(
	TH_ID INTEGER NOT NULL AUTO_INCREMENT,
	TP_ID INTEGER NOT NULL,
	ULD_ID INTEGER NULL,
	TTIP_ID INTEGER NOT NULL,
	TH_OLD_VALUE TEXT NOT NULL,
	TH_NEW_VALUE TEXT NULL,
	TH_USERSTAMP_ID INTEGER NOT NULL,
	TH_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(TH_ID),
	FOREIGN KEY(TP_ID) REFERENCES LMC_TICKLER_PROFILE(TP_ID),
	FOREIGN KEY(TTIP_ID) REFERENCES LMC_TICKLER_TABID_PROFILE(TTIP_ID),
	FOREIGN KEY(TH_USERSTAMP_ID) REFERENCES LMC_USER_LOGIN_DETAILS (ULD_ID));

	SET @ALTER_TICKLER_HISTORY = (SELECT CONCAT('ALTER TABLE LMC_TICKLER_HISTORY AUTO_INCREMENT = 0'));
	PREPARE ALTER_TICKLER_HISTORY_STMT FROM @ALTER_TICKLER_HISTORY;
	EXECUTE ALTER_TICKLER_HISTORY_STMT;

	SET SUCCESS_MESSAGE = 1;
	SET FOREIGN_KEY_CHECKS = 1;

	COMMIT;
END;

CALL SP_LMC_CONFIGURATION_EMAIL_TICKLER_TABLE_CREATION(@SUCCESS_MESSAGE); 
SELECT @SUCCESS_MESSAGE;

DROP PROCEDURE IF EXISTS SP_LMC_CONFIGURATION_EMAIL_TICKLER_TABLE_CREATION;