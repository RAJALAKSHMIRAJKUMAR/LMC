-- VER0.1 --SDATE:14/03/2015 --EDATE:14/03/2015 --DESC:SP TO SAVE VALUES IN LMC_REPORT_ATTACHMENT_DETAILS TABLE BY :RL

DROP PROCEDURE IF EXISTS SP_LMC_REPORT_ATTACHMENT_DETAILS_INSERT_UPDATE;
CREATE PROCEDURE SP_LMC_REPORT_ATTACHMENT_DETAILS_INSERT_UPDATE(
IN PROCESS VARCHAR(20),
IN ID INTEGER,
IN CATEGORY VARCHAR(50),
IN INDATE DATE,
IN DOCFILENAME TEXT,
IN USERSTAMP VARCHAR(50),
OUT SUCCESSFLAG INTEGER)

BEGIN

	DECLARE USERSTAMP_ID INTEGER;
	DECLARE CATEGORY_ID INTEGER;
	
-- ROLLBACK COMMAND
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		SET SUCCESSFLAG = 0;
	END;

	START TRANSACTION;
	SET AUTOCOMMIT=0;
	SET SUCCESSFLAG = 0;

-- SUB SP FOR CONVERTING USERSTAMP INTO ULDID
	CALL SP_TS_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULD_ID);
	SET USERSTAMP_ID=@ULD_ID;

	IF(ID='' OR ID IS NULL) THEN
		SET ID = NULL;
	END IF;

	SET CATEGORY_ID = (SELECT RDC_ID FROM LMC_REPORT_DOCUMENT_CATEGORY WHERE RDC_CATEGORY = CATEGORY);
	
	IF(PROCESS = 'INSERT') THEN

		IF(ID IS NULL AND CATEGORY_ID IS NOT NULL AND INDATE IS NOT NULL AND DOCFILENAME IS NOT NULL
		AND USERSTAMP IS NOT NULL) THEN

			INSERT INTO LMC_REPORT_ATTACHMENT_DETAILS(RDC_ID,RAD_DATE,RAD_DOC_FILE_NAME,ULD_ID) VALUES
			(CATEGORY_ID,INDATE,DOCFILENAME,USERSTAMP_ID);
			SET SUCCESSFLAG = 1;

		END IF;

	END IF;

	IF(PROCESS = 'UPDATE') THEN

		IF(ID IS NOT NULL AND CATEGORY_ID IS NOT NULL AND INDATE IS NOT NULL AND DOCFILENAME IS NOT NULL
		AND USERSTAMP IS NOT NULL) THEN

			UPDATE LMC_REPORT_ATTACHMENT_DETAILS SET RDC_ID = CATEGORY_ID, RAD_DATE = INDATE,
			RAD_DOC_FILE_NAME = DOCFILENAME, ULD_ID = USERSTAMP_ID WHERE RAD_ID = ID;
			SET SUCCESSFLAG = 1;

		END IF;

	END IF;

	COMMIT;

END;